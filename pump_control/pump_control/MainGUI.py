# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainGUI_test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import Gcode
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(723, 649)
        #MainWindow.showMaximized()
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.number_of_syringe_box = QtWidgets.QComboBox(self.centralwidget)
        self.number_of_syringe_box.setGeometry(QtCore.QRect(250, 80, 91, 31))
        self.number_of_syringe_box.setObjectName("number_of_syringe_box")
        self.number_of_syringe_box.addItem("")
        self.number_of_syringe_box.addItem("")
        self.number_of_syringe_box.addItem("")
        self.number_of_syringe_box.currentTextChanged.connect(self.syringe_num_changed,self.number_of_syringe_box.currentIndex())

        self.label1 = QtWidgets.QLabel(self.centralwidget)
        self.label1.setGeometry(QtCore.QRect(70, 79, 191, 31))
        self.label1.setObjectName("label1")

        self.frame_syr_x = QtWidgets.QFrame(self.centralwidget)
        self.frame_syr_x.setGeometry(QtCore.QRect(20, 130, 331, 131))
        self.frame_syr_x.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_syr_x.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_syr_x.setObjectName("frame_syr_x")

        self.flowspeed_x_text = QtWidgets.QPlainTextEdit(self.frame_syr_x)
        self.flowspeed_x_text.setGeometry(QtCore.QRect(230, 50, 91, 31))
        self.flowspeed_x_text.setObjectName("flowspeed_x_text")

        self.label2 = QtWidgets.QLabel(self.frame_syr_x)
        self.label2.setGeometry(QtCore.QRect(50, 49, 191, 31))
        self.label2.setObjectName("label2")

        self.label_2 = QtWidgets.QLabel(self.frame_syr_x)
        self.label_2.setGeometry(QtCore.QRect(50, 90, 81, 31))
        self.label_2.setObjectName("label_2")

        self.duration_x_text = QtWidgets.QPlainTextEdit(self.frame_syr_x)
        self.duration_x_text.setGeometry(QtCore.QRect(230, 90, 91, 31))
        self.duration_x_text.setObjectName("duration_x_text")

        self.inner_x = QtWidgets.QPlainTextEdit(self.frame_syr_x)
        self.inner_x.setGeometry(QtCore.QRect(230, 10, 91, 31))
        self.inner_x.setObjectName("inner_x")

        self.label_12 = QtWidgets.QLabel(self.frame_syr_x)
        self.label_12.setGeometry(QtCore.QRect(50, 10, 191, 31))
        self.label_12.setObjectName("label_12")

        self.generate_gcode_button = QtWidgets.QPushButton(self.centralwidget)
        self.generate_gcode_button.setGeometry(QtCore.QRect(530, 530, 151, 28))
        self.generate_gcode_button.setObjectName("generate_gcode_button")
        self.generate_gcode_button.clicked.connect(self.convert_to_gcode)

        self.frame_syr_z = QtWidgets.QFrame(self.centralwidget)
        self.frame_syr_z.setGeometry(QtCore.QRect(20, 390, 331, 131))
        self.frame_syr_z.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_syr_z.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_syr_z.setObjectName("frame_syr_z")

        self.flowspeed_z_text = QtWidgets.QPlainTextEdit(self.frame_syr_z)
        self.flowspeed_z_text.setGeometry(QtCore.QRect(230, 50, 91, 31))
        self.flowspeed_z_text.setObjectName("flowspeed_z_text")

        self.label_5 = QtWidgets.QLabel(self.frame_syr_z)
        self.label_5.setGeometry(QtCore.QRect(50, 49, 191, 31))
        self.label_5.setObjectName("label_5")

        self.label_6 = QtWidgets.QLabel(self.frame_syr_z)
        self.label_6.setGeometry(QtCore.QRect(50, 90, 191, 31))
        self.label_6.setObjectName("label_6")

        self.duration_z_text = QtWidgets.QPlainTextEdit(self.frame_syr_z)
        self.duration_z_text.setGeometry(QtCore.QRect(230, 90, 91, 31))
        self.duration_z_text.setObjectName("duration_z_text")

        self.inner_z = QtWidgets.QPlainTextEdit(self.frame_syr_z)
        self.inner_z.setGeometry(QtCore.QRect(230, 10, 91, 31))
        self.inner_z.setObjectName("inner_z")

        self.label_10 = QtWidgets.QLabel(self.frame_syr_z)
        self.label_10.setGeometry(QtCore.QRect(50, 10, 191, 31))
        self.label_10.setObjectName("label_10")

        self.save_settings_button = QtWidgets.QPushButton(self.centralwidget)
        self.save_settings_button.setGeometry(QtCore.QRect(180, 530, 141, 28))
        self.save_settings_button.setObjectName("save_settings_button")
        self.save_settings_button.clicked.connect(self.save_clicked)

        self.clear_settings_button = QtWidgets.QPushButton(self.centralwidget)
        self.clear_settings_button.setGeometry(QtCore.QRect(380, 530, 141, 28))
        self.clear_settings_button.setObjectName("clear_settings_button")
        self.clear_settings_button.clicked.connect(self.clear_clicked)


        self.load_settings_button = QtWidgets.QPushButton(self.centralwidget)
        self.load_settings_button.setGeometry(QtCore.QRect(32, 530, 141, 28))
        self.load_settings_button.setObjectName("load_settings_button")
        self.load_settings_button.clicked.connect(self.load_clicked)

        self.image_capture_frame = QtWidgets.QFrame(self.centralwidget)
        self.image_capture_frame.setGeometry(QtCore.QRect(370, 130, 321, 321))
        self.image_capture_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.image_capture_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.image_capture_frame.setObjectName("image_capture_frame")

        self.image_folder_path_text = QtWidgets.QTextEdit(self.image_capture_frame)
        self.image_folder_path_text.setGeometry(QtCore.QRect(10, 140, 201, 41))
        self.image_folder_path_text.setObjectName("image_folder_path_text")

        self.browse = QtWidgets.QPushButton(self.image_capture_frame)
        self.browse.setGeometry(QtCore.QRect(220, 140, 91, 31))
        self.browse.setObjectName("browse")
        self.browse.clicked.connect(self.browsefiles)  # when browse is clicked, call browsefiles function

        self.label = QtWidgets.QLabel(self.image_capture_frame)
        self.label.setGeometry(QtCore.QRect(00, 115, 251, 21))
        self.label.setObjectName("label")

        self.label_7 = QtWidgets.QLabel(self.image_capture_frame)
        self.label_7.setGeometry(QtCore.QRect(00, 50, 141, 31))
        self.label_7.setObjectName("label_7")

        self.image_label_text = QtWidgets.QPlainTextEdit(self.image_capture_frame)
        self.image_label_text.setGeometry(QtCore.QRect(120, 50, 191, 31))
        self.image_label_text.setObjectName("image_label_text")

        self.label_9 = QtWidgets.QLabel(self.image_capture_frame)
        self.label_9.setGeometry(QtCore.QRect(00, 10, 141, 31))
        self.label_9.setObjectName("label_9")

        self.capture_image_interval_text = QtWidgets.QPlainTextEdit(self.image_capture_frame)
        self.capture_image_interval_text.setGeometry(QtCore.QRect(120, 10, 191, 31))
        self.capture_image_interval_text.setObjectName("capture_image_interval_text")

        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(540, 80, 61, 31))
        self.checkBox.setText("")
        self.checkBox.setObjectName("checkBox")
        self.checkBox.clicked.connect(self.checkbox_images_clicked)

        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(370, 80, 141, 31))
        self.label_8.setObjectName("label_8")

        self.frame_syr_y = QtWidgets.QFrame(self.centralwidget)
        self.frame_syr_y.setGeometry(QtCore.QRect(20, 260, 331, 131))
        self.frame_syr_y.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_syr_y.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_syr_y.setObjectName("frame_syr_y")

        self.flowspeed_y_text = QtWidgets.QPlainTextEdit(self.frame_syr_y)
        self.flowspeed_y_text.setGeometry(QtCore.QRect(230, 50, 91, 31))
        self.flowspeed_y_text.setObjectName("flowspeed_y_text")

        self.label_3 = QtWidgets.QLabel(self.frame_syr_y)
        self.label_3.setGeometry(QtCore.QRect(50, 49, 191, 31))
        self.label_3.setObjectName("label_3")

        self.label_4 = QtWidgets.QLabel(self.frame_syr_y)
        self.label_4.setGeometry(QtCore.QRect(50, 90, 191, 31))
        self.label_4.setObjectName("label_4")

        self.duration_y_text = QtWidgets.QPlainTextEdit(self.frame_syr_y)
        self.duration_y_text.setGeometry(QtCore.QRect(230, 90, 91, 31))
        self.duration_y_text.setObjectName("duration_y_text")

        self.label_11 = QtWidgets.QLabel(self.frame_syr_y)
        self.label_11.setGeometry(QtCore.QRect(50, 10, 191, 31))
        self.label_11.setObjectName("label_11")

        self.inner_y = QtWidgets.QPlainTextEdit(self.frame_syr_y)
        self.inner_y.setGeometry(QtCore.QRect(230, 10, 91, 31))
        self.inner_y.setObjectName("inner_y")
        MainWindow.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 723, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.frame_syr_x.setHidden(True)
        self.frame_syr_z.setHidden(True)
        self.frame_syr_y.setHidden(True)
        self.image_capture_frame.setHidden(True)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.number_of_syringe_box.setItemText(0, _translate("MainWindow", "1"))
        self.number_of_syringe_box.setItemText(1, _translate("MainWindow", "2"))
        self.number_of_syringe_box.setItemText(2, _translate("MainWindow", "3"))
        self.label1.setText(_translate("MainWindow", "Select the number of pumps"))
        self.label2.setText(_translate("MainWindow", "Flowrate of Syringe X (ml/min)"))
        self.label_2.setText(_translate("MainWindow", "Duration (min)"))
        self.label_12.setText(_translate("MainWindow", "Syringe X inner diameter (mm)"))
        self.generate_gcode_button.setText(_translate("MainWindow", "Generate G-code"))
        self.label_5.setText(_translate("MainWindow", "Flowrate of Syringe Z (ml/min)"))
        self.label_6.setText(_translate("MainWindow", "Duration (min)"))
        self.label_10.setText(_translate("MainWindow", "Syringe Z inner diameter (mm)"))
        self.save_settings_button.setText(_translate("MainWindow", "Save settings"))
        self.load_settings_button.setText(_translate("MainWindow", "Load settings"))
        self.clear_settings_button.setText(_translate("MainWindow", "Clear settings"))
        self.browse.setText(_translate("MainWindow", "Browse"))
        self.label.setText(_translate("MainWindow", "Select a folder to save your images:"))
        self.label_7.setText(_translate("MainWindow", "Add Image labels"))
        self.label_9.setText(_translate("MainWindow", "Time interval (s)"))
        self.label_8.setText(_translate("MainWindow", "Capture images?"))
        self.label_3.setText(_translate("MainWindow", "Flowrate of Syringe Y (ml/min)"))
        self.label_4.setText(_translate("MainWindow", "Duration (min)"))
        self.label_11.setText(_translate("MainWindow", "Syringe Y inner diameter (mm)"))

    def browsefiles(self):          #function that allows user to browse and select folder to save images
        foldername = str(QFileDialog.getExistingDirectory(self.image_capture_frame, "Select Directory"))
        self.image_folder_path_text.setText(foldername)

    def syringe_num_changed(self, value):       #when the value of number-syringes is changed, gui will be updated
        if value == '1':
            self.frame_syr_x.setHidden(False)
            self.frame_syr_y.setHidden(True)
            self.frame_syr_z.setHidden(True)
        elif value == '2':
            self.frame_syr_x.setHidden(False)
            self.frame_syr_y.setHidden(False)
            self.frame_syr_z.setHidden(True)
        else:
            self.frame_syr_x.setHidden(False)
            self.frame_syr_y.setHidden(False)
            self.frame_syr_z.setHidden(False)

    def checkbox_images_clicked(self):
        if self.checkBox.isChecked() == True:
            self.image_capture_frame.setHidden(False)
        else:
            self.image_capture_frame.setHidden(True)
            self.capture_image_interval_text.setPlainText('')
            self.image_label_text.setPlainText('')
            self.image_folder_path_text.setPlainText('')


    def clear_clicked(self):
        self.inner_x.setPlainText('')
        self.flowspeed_x_text.setPlainText('')
        self.duration_x_text.setPlainText('')
        self.inner_y.setPlainText('')
        self.flowspeed_y_text.setPlainText('')
        self.duration_y_text.setPlainText('')
        self.inner_z.setPlainText('')
        self.flowspeed_z_text.setPlainText('')
        self.duration_z_text.setPlainText('')
        self.capture_image_interval_text.setPlainText('')
        self.image_label_text.setPlainText('')
        self.image_folder_path_text.setPlainText('')

    def save_clicked(self):
        id_x = self.inner_x.toPlainText()
        flow_x = self.flowspeed_x_text.toPlainText()
        dur_x = self.duration_x_text.toPlainText()
        id_y = self.inner_y.toPlainText()
        flow_y = self.flowspeed_y_text.toPlainText()
        dur_y = self.duration_y_text.toPlainText()
        id_z = self.inner_z.toPlainText()
        flow_z = self.flowspeed_z_text.toPlainText()
        dur_z = self.duration_z_text.toPlainText()
        interval_images = self.capture_image_interval_text.toPlainText()
        image_label = self.image_label_text.toPlainText()
        image_path = self.image_folder_path_text.toPlainText()

        name, filter = QFileDialog.getSaveFileName(self.centralwidget, 'Save File', '', "Text files (*.txt)")
        if not name:
            return

        try:
            with open(name, 'w') as file:
                file.write(id_x + '\n')
                file.write(flow_x + '\n')
                file.write(dur_x + '\n')
                file.write(id_y + '\n')
                file.write(flow_y + '\n')
                file.write(dur_y + '\n')
                file.write(id_z + '\n')
                file.write(flow_z + '\n')
                file.write(dur_z + '\n')
                file.write(interval_images + '\n')
                file.write(image_label + '\n')
                file.write(image_path + '\n')
                if self.checkBox.isChecked() == True:
                    file.write('True')
                else:
                    file.write('False')

        except Exception as e:
            self.dialog_critical(str(e))

    def load_clicked(self):
        path,filter = QFileDialog.getOpenFileName(self.centralwidget, 'Open File','', "Text files (*.txt)")
        if not path:
            return

        try:
            with open(path, 'r') as file:
                lines = []
                for line in file:
                    lines += [line]
                id_x = lines[0]
                flow_x = lines[1]
                dur_x = lines[2]
                id_y = lines[3]
                flow_y = lines[4]
                dur_y = lines[5]
                id_z = lines[6]
                flow_z = lines[7]
                dur_z = lines[8]
                interval_images = lines[9]
                image_label = lines[10]
                image_path = lines[11]
                bool = lines[12]
                if bool == 'True':
                    self.checkBox.setChecked(True)
                    self.checkbox_images_clicked()
                else:
                    self.checkBox.setChecked(False)
            if id_y == '\n':
                self.number_of_syringe_box.setCurrentIndex(0)
            if id_z == '\n':
                self.number_of_syringe_box.setCurrentIndex(1)
            if id_z != '\n':
                self.number_of_syringe_box.setCurrentIndex(2)
            self.inner_x.setPlainText(id_x)
            self.flowspeed_x_text.setPlainText(flow_x)
            self.duration_x_text.setPlainText(dur_x)
            value = self.number_of_syringe_box.currentIndex()
            if value  == 1:
                self.inner_y.setPlainText(id_y)
                self.flowspeed_y_text.setPlainText(flow_y)
                self.duration_y_text.setPlainText(dur_y)
                self.inner_z.setPlainText('')
                self.flowspeed_z_text.setPlainText('')
                self.duration_z_text.setPlainText('')
            elif self.number_of_syringe_box.currentIndex() == 2:
                self.inner_y.setPlainText(id_y)
                self.flowspeed_y_text.setPlainText(flow_y)
                self.duration_y_text.setPlainText(dur_y)
                self.inner_z.setPlainText(id_z)
                self.flowspeed_z_text.setPlainText(flow_z)
                self.duration_z_text.setPlainText(dur_z)
            if self.checkBox.isChecked():
                self.capture_image_interval_text.setPlainText(interval_images)
                self.image_label_text.setPlainText(image_label)
                self.image_folder_path_text.setPlainText(image_path)
            else:
                self.capture_image_interval_text.setPlainText('')
                self.image_label_text.setPlainText('')
                self.image_folder_path_text.setPlainText('')


        except Exception as e:
            self.dialog_critical(str(e))

    def convert_to_gcode(self):
        id_x = self.inner_x.toPlainText()
        flow_x = self.flowspeed_x_text.toPlainText()
        dur_x = self.duration_x_text.toPlainText()
        id_y = self.inner_y.toPlainText()
        flow_y = self.flowspeed_y_text.toPlainText()
        dur_y = self.duration_y_text.toPlainText()
        id_z = self.inner_z.toPlainText()
        flow_z = self.flowspeed_z_text.toPlainText()
        dur_z = self.duration_z_text.toPlainText()
        interval_images = self.capture_image_interval_text.toPlainText()
        image_label = self.image_label_text.toPlainText()
        image_path = self.image_folder_path_text.toPlainText()

        filename, filter = QFileDialog.getSaveFileName(self.centralwidget, 'Save File', '', "Gcode files (*.gcode)")
        if not filename:
            return
        value = self.number_of_syringe_box.currentIndex()
        if value == 0:
            Gcode.write_x_gcode(filename,float(id_x),float(flow_x),float(dur_x))
        elif value == 1:
            Gcode.write_xy_gcode(filename, float(id_x), float(flow_x), float(dur_x), float(id_y), float(flow_y), float(dur_y))
        elif value == 2:
            Gcode.write_xyz_gcode(filename, float(id_x), float(flow_x), float(dur_x), float(id_y), float(flow_y), float(dur_y), float(id_z), float(flow_z), float(dur_z))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
